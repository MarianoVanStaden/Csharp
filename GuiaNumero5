//using System;
//using System.Collections.Generic;
//using System.Linq;
//using System.Text;
//using System.Threading.Tasks;

//namespace ConsoleApp1
//{
//    class Program
//    {
//        static void Main(string[] args)
//        {
//            Console.WriteLine("Ingrese el nùmero del tipo de figura que  quiere calcular (cuadrado = 1, triangulo = 2, rectangulo =3)");
//            int tipo = Convert.ToInt32(Console.ReadLine());
//            Console.WriteLine($"El área de la figura es: {CalcularArea(tipo)}");
//            Console.WriteLine("Fin del programa");
//            Console.ReadKey();
//        }

//        static double CalcularArea(int tipo)
//        {
//            Console.WriteLine("Ingrese la base de su figura");
//            double lado1 = Convert.ToDouble(Console.ReadLine());
//            double lado2 = 0;
//            if (tipo != 1)
//            {
//                Console.WriteLine("Ingrese la altura de su figura");
//                lado2 = Convert.ToDouble(Console.ReadLine());
//            }
//            switch (tipo)
//            {
//                case 1:
//                    {
//                        return Math.Pow(lado1, 2);
//                        break;
//                    }
//                case 2:
//                    {
//                        return (lado1 * lado2) / 2;
//                        break;
//                    }
//                case 3:
//                    {
//                        return lado1 * lado2;
//                        break;
//                    }
//                default: return 0;

//            }
//        }
//    }
//}

#region GuiaNúmero5
#region Ejercicio N°1 26/05/2023
////1) Realizar distintos métodos que reciba cómo parámetro dos números reales y realicen
////lo siguiente:
////a) Calcule la sustracción de ambos números en valor absoluto.
////b) Calcule el promedio de dichos números.
////c) Devuelva el máximo de dichos números.
////d) Devuelva el mínimo de dichos números.
////e) Devuelva un mensaje indicando si el primer número es divisible por el
////segundo.

//int opcion;
//double x, y;
//Console.WriteLine("Ingrese el valor de A");
//x = int.Parse(Console.ReadLine());
//Console.WriteLine("Ingrese el valor de B");
//y = int.Parse(Console.ReadLine());
//Console.WriteLine("Selecciones una opción para operar a y b");
//opcion = int.Parse(Console.ReadLine());
//switch (opcion)
//{
//    case 1 : CalcularAbs(x, y);Console.WriteLine(CalcularAbs(x, y));break;
//    case 2 : CalcularPromedio(x,y);Console.WriteLine(CalcularPromedio(x, y)); break;
//    case 3 : DevolverMayor(x,y); Console.WriteLine(DevolverMayor(x, y)); break;
//    case 4 : DevolverMenor(x,y); Console.WriteLine(DevolverMenor(x, y)); break;
//    case 5:  DividirAporB(x,y); Console.WriteLine(DividirAporB(x, y)); break;


//}
//static double CalcularAbs(double a, double b)
//{
//    double resultado = 0; 
//    resultado=Math.Abs(a - b);
//    return resultado;
//}
//static double CalcularPromedio(double a, double b)
//{
//    double resultado = 0;
//    resultado = (a+b)/2;
//    return resultado;
//}
//static double DevolverMayor(double a, double b)
//{
//    if (a >= b) return a;
//    else return b;   
//}
//static double DevolverMenor(double a, double b)
//{
//    if (a >= b) return b;
//    else return a;
//}
//static string DividirAporB(double a, double b)
//{
//    string mensajePositivo = "A es divisible por B";
//    string mensajeNegativo = "A no es divisible por B";
//    if ((a % b) == 0) return mensajePositivo;
//    else return mensajeNegativo;
//}

#endregion
#region Ejercicio N°2 A 26/05/2023
//2) Codificar los siguientes ejercicios con métodos:
//a) Se desea conocer el impuesto a pagar según el total ganado en el año. Leer
//la ganancia anual (GANUAL) y mostrar el impuesto (IMPU) de acuerdo a la
//siguiente tabla:
//GANUAL < 100000 ……. IMPU = 0
//100000 <= GANUAL < 150000 …. IMPU = 2 % de(GANUAL - 100000)
//150000 <= GANUAL …. IMPU = 3000 + 5 % de(GANUAL - 150000)
//El cálculo del impuesto debe ser realizado en un método que reciba cómo
//parámetro la ganancia anual.
//double gananciaAnual;
//Console.WriteLine("Ingresar su ganancia anual");
//gananciaAnual = double.Parse(Console.ReadLine());
//Console.WriteLine($"Usted pagará {CalcularImpuesto(gananciaAnual)}$ de impuestos");
//Console.ReadKey();


//static double CalcularImpuesto(double salarioAnual)
//{
//    if (salarioAnual < 100000) return (salarioAnual*0);
//    else if (salarioAnual >= 100000 && salarioAnual < 150000) return (salarioAnual * 0.02);
//    else return (3000 + (0.05 * (salarioAnual - 150000)));
//}
#endregion
#region Ejercicio N°2 B 26/05/2023
//b) Leer número de libreta y tres notas (de tipo real) correspondiente a una
//materia, mostrar nro. de libreta y dos carteles indicando si aprobó o no y el
//concepto. Para aprobar se necesita un promedio de 5 puntos cómo mínimo.
//Con respecto al concepto: si obtiene 9 o más le corresponde Sobresaliente
//(S), menos de 9 y hasta 8 inclusive el concepto es Distinguido (D), menos de
//8 y hasta 6 es Bueno (B), menos de 6 y hasta 4 en Regular (R), menos de 4
//es Insuficiente (I).
//Desarrollar un método que reciba el promedio y devuelva una cadena con el
//concepto.

//try //El try catch va a evitar que se rompa el programa cuando ingresen simbolos o letras en lugar de números
//{
//    int numeroLibreta;
//    double nota1, nota2, nota3, promedio = 0;
//    Console.WriteLine("¡Hola alumno! Ingrese su número de libreta");
//    numeroLibreta = int.Parse(Console.ReadLine());
//    Console.WriteLine("Alumno, ingrese su primer calificación");
//    nota1 = int.Parse(Console.ReadLine());
//    Console.WriteLine("Alumno, ingrese su segunda calificación");
//    nota2 = int.Parse(Console.ReadLine());
//    Console.WriteLine("Alumno, ingrese su tercer calificación");
//    nota3 = int.Parse(Console.ReadLine());
//    promedio = (nota1 + nota2 + nota3) / 3;
//    Console.WriteLine($"Su número de libreta es la número: {numeroLibreta}");
//    Console.WriteLine(EvaluarConcepto(promedio));


//    static string EvaluarConcepto(double promedio)
//    { 
//    if (promedio >= 9)
//    {
//            return "Usted aprobó \n El concepto es: Sobresaliente";
//    }
//    else if (promedio >= 8 && promedio < 9)
//    {
//            return "Usted aprobó \n El concepto es: Distinguido";
//    }
//    else if (promedio >= 6 && promedio < 8)
//    {
//            return "Usted aprobó \n El concepto es: Bueno";
//    }
//    else if (promedio >= 4 && promedio < 6)
//    {
//            return "Usted aprobó \n El concepto es: Regular";
//    }
//    else 
//    {
//            return "Usted aprobó \n El concepto es: Insuficiente";
//    }
//    }

//    Console.ReadKey(); //evita que una vez que se muestren los resultados se cierre la consola
//}
//catch (FormatException) //el catch atrapa solo errores de formato
//{
//    Console.WriteLine("El dato ingresado tuvo un formato incorrecto, debe asignar coeficientes");

//}
#endregion
#region Ejercicio N°2 B 26/05/2023
//c) Se lee un conjunto de números positivos (el último es negativo). Se pide
//evaluar y mostrar para cada valor ingresado, el valor de y siendo y = x + x/2 + 4
//Desarrollar un método para hallar el valor de y.

//using System;
//using System.Collections.Generic;
//using System.Linq;
//using System.Text;
//using System.Threading.Tasks;

//namespace GuiaNumero5
//{
//    class Program
//    {
//        static void Main(string[] args)
//        {
//            double numeroIngresado;
//            Console.WriteLine("Ingrese números para la fòrmula  y = x + x/2 + 4; ingrese un número negativo para finalizar");
//            numeroIngresado = double.Parse(Console.ReadLine());
//            HallarValorY(numeroIngresado);
//            Console.WriteLine("Fin del programa");
//            Console.ReadKey();

//        }
//        static void HallarValorY(double numero)
//        {
//            do
//            {

//                double valorY = numero + numero / 2 + 4;
//                Console.WriteLine($" El valor de Y es igual a: {valorY}");
//                Console.WriteLine("Ingrese números para la fòrmula  y = x + x/2 + 4; ingrese un número negativo para finalizar");
//                numero = double.Parse(Console.ReadLine());

//            } while (numero >= 0);
//        }
//    }
//}





#endregion
#region Ejercicio N°3 A 26/05/2023

//3)
//a) Desarrollar un método que reciba cómo entrada las longitudes A, B, C, D
//correspondientes a los lados de un cuadrilátero y devuelva su clasificación:
//cuadrado: 4 lados iguales
//rectángulo: 2 pares de lados iguales
//trapecio: 2 lados iguales y 2 lados distintos entre sí
//romboide: 4 lados distintos
//Introducción a la programación
//using System;
//using System.Collections.Generic;
//using System.Linq;
//using System.Text;
//using System.Threading.Tasks;

//namespace GuiaNumero5
//{
//    class Program
//    {
//        static void Main(string[] args)
//        {


//            Console.WriteLine(CalcularTipo());
//            Console.ReadKey();

//        }
//        static string CalcularTipo()
//        {

//                double ladoA, ladoB, ladoC, ladoD;
//                Console.WriteLine("Ingrese la medida del primer lado");
//                ladoA = double.Parse(Console.ReadLine());
//                Console.WriteLine("Ingrese la medida del segundo lado");
//                ladoB = double.Parse(Console.ReadLine());
//                Console.WriteLine("Ingrese la medida del tercer lado");
//                ladoC = double.Parse(Console.ReadLine());
//                Console.WriteLine("Ingrese la medida del cuarto lado");
//                ladoD = double.Parse(Console.ReadLine());
//                 if (ladoA == ladoB && ladoB == ladoC && ladoC == ladoD) return "El cuadrilatero es un cuadrado";
//                 else if ((ladoA == ladoB && ladoC == ladoD) || (ladoA == ladoC && ladoB == ladoD) || (ladoA == ladoD && ladoB == ladoC)) return "El cuadrilatero es un rectangulo";
//                 else if ((ladoA == ladoB && ladoC != ladoD) || (ladoA == ladoC && ladoB != ladoD) || (ladoA == ladoD && ladoB != ladoC) || (ladoB == ladoC && ladoA != ladoD) || (ladoB == ladoD && ladoA != ladoC) || (ladoC == ladoD && ladoA != ladoB)) return "El cuadrilatero es un trapecio";
//                 else return "El cuadrilatero es un romboide";
//        }
//    }
//}
#endregion
#region Ejercicio N°3 B 26 / 05/2023
////b) Utilizar el método definido en a) en un programa que resuelva el siguiente
////problema: Ingresar las medidas de los 4 lados de N cuadriláteros. Hallar y
////mostrar:
////i) Porcentaje de cuadrados con respecto a la cantidad de cuadriláteros
////que tienen al menos 2 lados iguales.
////ii) Para cuál de las clases de cuadriláteros se ingresó la menor cantidad
////de datos: rectángulo, trapecio o romboide.
//using System;
//using System.Collections.Generic;
//using System.Linq;
//using System.Text;
//using System.Threading.Tasks;

//namespace GuiaNumero5
//{
//    class Program
//    {
//        static void Main(string[] args)
//        {
//            int cantidad, cuadrado=0, rectangulo = 0, trapecio = 0, romboide = 0;
//            string resultado;
//            Console.WriteLine("Ingrese la cantidad de cuadrilateros que va a ingresar");
//            cantidad = int.Parse(Console.ReadLine());
//            for (int i=0; i<cantidad; i++)
//            {
//                resultado = CalcularTipo();
//                Console.WriteLine($"El cuadrilatero es un {resultado}");
//                if (resultado == "cuadrado") cuadrado++;
//                else if (resultado == "rectangulo") rectangulo++;
//                else if (resultado == "trapecio") trapecio++;
//                else romboide++;
//            }
//            Console.WriteLine($"Porcentaje de cuadrados con respecto a la cantidad de cuadriláteros que tienen al menos 2 lados iguales es del {CalcularCuadrados(cuadrado, rectangulo, trapecio)}%");
//            Console.WriteLine(CalcularMenor(rectangulo, trapecio, romboide));
//            Console.ReadKey();

//        }
//        static string CalcularTipo()
//        {

//            double ladoA, ladoB, ladoC, ladoD;
//            Console.WriteLine("Ingrese la medida del primer lado");
//            ladoA = double.Parse(Console.ReadLine());
//            Console.WriteLine("Ingrese la medida del segundo lado");
//            ladoB = double.Parse(Console.ReadLine());
//            Console.WriteLine("Ingrese la medida del tercer lado");
//            ladoC = double.Parse(Console.ReadLine());
//            Console.WriteLine("Ingrese la medida del cuarto lado");
//            ladoD = double.Parse(Console.ReadLine());
//            if (ladoA == ladoB && ladoB == ladoC && ladoC == ladoD) return "cuadrado";
//            else if ((ladoA == ladoB && ladoC == ladoD) || (ladoA == ladoC && ladoB == ladoD) || (ladoA == ladoD && ladoB == ladoC)) return "rectangulo";
//            else if ((ladoA == ladoB && ladoC != ladoD) || (ladoA == ladoC && ladoB != ladoD) || (ladoA == ladoD && ladoB != ladoC) || (ladoB == ladoC && ladoA != ladoD) || (ladoB == ladoD && ladoA != ladoC) || (ladoC == ladoD && ladoA != ladoB)) return "trapecio";
//            else return "romboide";
//        }
//        static double CalcularCuadrados(double cuadrado, double rectangulo, double trapecio)
//        {
//            double totalDosLados = cuadrado+rectangulo+trapecio;
//            double porcentajeCuadrados = cuadrado * 100 / totalDosLados;
//            return porcentajeCuadrados;
//        }
//        static string CalcularMenor(double rectangulo, double trapecio, double romboide)
//        {
//            Console.WriteLine($"rectangulo, trapecio, romboide {rectangulo}, {trapecio}, {romboide}");
//            if (rectangulo == trapecio && rectangulo == romboide) return "La cantidad es la misma";
//            else if (rectangulo == trapecio && rectangulo < romboide && rectangulo!=0 && romboide!=0) return "La cantidad de rectangulos y trapecios es menor";
//            else if (rectangulo == romboide && rectangulo < trapecio && rectangulo != 0 && romboide != 0) return "La cantidad de rectangulos y romboides es menor";
//            else if (romboide == trapecio && romboide < rectangulo && romboide != 0 && trapecio != 0) return "La cantidad de romboides y trapecios es menor";
//            else if (trapecio < rectangulo && trapecio < romboide && rectangulo != 0 && romboide != 0 && trapecio != 0) return "La cantidad de trapecios es menor";
//            else if (rectangulo < trapecio && rectangulo < romboide && rectangulo != 0 && romboide != 0 && trapecio != 0) return "La cantidad de rectangulos es menor";
//            else if (romboide < trapecio && romboide < rectangulo && rectangulo != 0 && romboide != 0 && trapecio != 0) return "La cantidad de romboides es menor";
//            else if (rectangulo == trapecio && rectangulo != 0) return "La cantidad de rectangulos y trapecios es menor";
//            else if (rectangulo == romboide && rectangulo != 0) return "La cantidad de rectangulos y romboides es menor";
//            else if (romboide == trapecio && romboide != 0) return "La cantidad de romboides y trapecios es menor";
//            else if (rectangulo != 0 && romboide == 0 && trapecio == 0) return "La cantidad de rectangulos es menor";
//            else if (romboide != 0 && rectangulo == 0 && trapecio == 0) return "La cantidad de rectangulos es menor";
//            else if (trapecio != 0 && romboide == 0 && rectangulo == 0) return "La cantidad de rectangulos es menor";
//            else return "Se fue del bucle";
//        }
//    }
//}
#endregion
#region Ejercicio N°4 26 / 05/2023
//4) Leer un conjunto de números enteros. Se deberá calcular el factorial de los números
//no negativos. Detener el proceso cuando se hayan calculado 4 factoriales o cuando
//el factorial calculado sea mayor a 5000.
//(0! = 1; 1! = 1; 2! = 2 * 1; 3! = 3 * 2 * 1; … ; n! = n * (n - 1) * (n - 2) * (n - 3) * ...*1)
//Desarrollar un método para el cálculo del Factorial

//using System;

//namespace GuiaNumero5
//{
//    class Program
//    {
//        static void Main(string[] args)
//        {
//            int
//                num, resultado = 0;
//            for (int i = 0; i < 4 && resultado < 5000; i++)
//            {
//                Console.WriteLine("Ingrese el número para calcular su factorial");
//                num = int.Parse(Console.ReadLine());
//                resultado = CalcularFactorial(num);
//                Console.WriteLine($"El {i + 1}° factorial fue : {resultado}");
//            }
//            Console.ReadKey();

//        }
//        static int CalcularFactorial(int num)
//        {
//            int factorial = 1;
//            for (int i = 1; i <= num; i++)
//            {
//                factorial *= i;
//            }
//            return factorial;
//        }

//    }
//}


#endregion
#region Ejercicio N°5 27 / 05/2023
//5) Desarrollar un método que reciba por parámetro una palabra y devuelva si la misma
//es o no palíndromo (capicúa). No discriminar entre mayúsculas y minúsculas.
//Ejemplo: ANa, AnaNA son palíndromos (se leen igual de izquierda a derecha).

//using System;

//namespace GuiaNumero5
//{
//    class Program
//    {
//        static void Main(string[] args)
//        {
//            string palabra;
//            Console.WriteLine("Ingrese una palabra para ver si es o no una palabra palíndroma");
//            palabra = (Console.ReadLine()).ToLower();
//            Console.WriteLine($"La palabra {CompararPalabras(palabra)}");

//        }
//        static string CompararPalabras(string palabra)
//        {
//            char[] chars = palabra.ToCharArray();
//            Array.Reverse(chars);
//            string palabraInvertida = new string(chars);
//            Console.WriteLine(palabraInvertida);
//            if (palabra == palabraInvertida) return "es palíndroma";
//            else return "no es palíndroma";
//        }

//    }
//}


#endregion
#region Ejercicio N°6 27 / 05/2023
//6) Desarrollar un método que reciba por parámetro dos números reales positivos y
//devuelva una cadena con la intercalación de las cifras de ambos números (si el
//número es decimal, solo contemplar la parte entera).
//Ejemplo: número 1 = 12.5 y numero2 = 4567 → “142567”

//using System;

//namespace GuiaNumero5
//{
//    class Program
//    {
//        static void Main(string[] args)
//        {
//            double numeroA, numeroB;
//            Console.WriteLine("Ingrese el primer número");
//            numeroA = (int)Convert.ToDouble(Console.ReadLine());
//            Console.WriteLine("Ingrese el segundo número");
//            numeroB = (int)Convert.ToDouble(Console.ReadLine());
//            Console.WriteLine(numeroA);
//            Console.WriteLine(numeroB);
//            Console.ReadKey();
//            Console.WriteLine($"El nùmero final es: {IntercalarNumeros(numeroA, numeroB)}");

//        }
//        static int IntercalarNumeros(double num1, double num2)
//        {
//            string cadena1 = num1.ToString();
//            string cadena2 = num2.ToString();
//            string intercalacion = "";
//            int longitud = Math.Max(cadena1.Length, cadena2.Length);
//            for (int i=0; i<longitud;i++)
//            {
//                if (i < cadena1.Length) intercalacion += cadena1[i];
//                if (i < cadena2.Length) intercalacion += cadena2[i];
//            }
//            int numeroFinal = Convert.ToInt32(intercalacion);
//            return numeroFinal;
//        }

//    }
//}


#endregion
#region Ejercicio N°7 A 27 / 05/2023
//7) Codificar utilizando métodos:
//a) Desarrollar un método que tenga dos parámetros enteros: el número base y
//un número exponente y que devuelva la operación potenciación (no utilizar la
//librería Math).
//Nota: considerar que el exponente es mayo o igual a cero.


//using System;

//namespace GuiaNumero5
//{
//    class Program
//    {
//        static void Main(string[] args)
//        {

//            int numeroBase;
//            int numeroExponente;
//            Console.WriteLine("Ingrese el nùmero base (debe ser entero)");
//            numeroBase= Convert.ToInt32(Console.ReadLine());
//            Console.WriteLine("Ingrese el exponente (deber ser entero y mayor o igual a cero");
//            numeroExponente = Convert.ToInt32(Console.ReadLine());
//            Console.WriteLine(numeroBase);
//            Console.WriteLine(numeroExponente);
//            Console.ReadKey();
//            Console.WriteLine($"El resultado final es: {CalcularPotencia(numeroBase, numeroExponente)}");

//        }
//        static int CalcularPotencia(int numBase, int numExpo)
//        {
//            int resultado = numBase;
//            if (numExpo == 0) resultado = 1;
//            else for (int i = 1; i < numExpo; i++) resultado *= numBase;
//            return resultado;
//        }

//    }
//}


#endregion
#region Ejercicio N°7 B 27 / 05/2023
//b) Mejorar el ejercicio anterior, permitiendo que el exponente puede ser
//negativo.


//using System;

//namespace GuiaNumero5
//{
//    class Program
//    {
//        static void Main(string[] args)
//        {

//            int numeroBase;
//            int numeroExponente;
//            Console.WriteLine("Ingrese el nùmero base (debe ser entero)");
//            numeroBase = Convert.ToInt32(Console.ReadLine());
//            Console.WriteLine("Ingrese el exponente (deber ser entero)");
//            numeroExponente = Convert.ToInt32(Console.ReadLine());
//            Console.ReadKey();
//            Console.WriteLine($"El resultado final es: {CalcularPotencia(numeroBase, numeroExponente)}");

//        }
//        static double CalcularPotencia(double numBase, double numExpo)
//        {
//            double resultado = numBase;
//            if (numExpo == 0) 
//            {
//                resultado = 1; 
//                return resultado; 
//            }
//            else if (numExpo < 0)
//            {
//                for (int i = 0; i > numExpo; i--)
//                {
//                    if (i == 0) resultado = (1 / numBase);
//                    else resultado *= (1 / numBase);
//                    Console.WriteLine(resultado);
//                }
//                return resultado;
//            }
//            else
//            {
//                for (int i = 1; i < numExpo; i++)
//                {
//                    resultado *= numBase;

//                }
//                return resultado;
//            }
//        }

//    }
//}
#endregion
#region Ejercicio N°7 C 27 / 05/2023
//c) Utilizar el método creado en b) para resolver el siguiente problema:
//Se quiere crear un método para transformar un número binario (que se pasa
//cómo parámetro) a decimal.
////Ejemplo: si se ingresa el número binario “1110001” deberá devolver 113

//using System;

//namespace GuiaNumero5
//{
//    class Program
//    {
//        static void Main(string[] args)
//        {

//            int numeroDecimal;
//            Console.WriteLine("Ingrese el nùmero base (debe ser entero)");
//            numeroDecimal = Convert.ToInt32(Console.ReadLine());
//            Console.ReadKey();
//            Console.WriteLine($"El resultado final es: {ConvertToBinary(numeroDecimal)}");

//        }
//        static string ConvertToBinary(int numDec)
//        {
//            string resultado = "";
//            if (numDec == 0)
//            {
//                resultado = "0";

//            }
//            while (numDec > 0)
//            {
//                int resto = numDec % 2;

//                resultado = resto.ToString() + resultado;

//                numDec /= 2;
//            }
//            return resultado;
//        }

//    }
//}
#endregion
#region Ejercicio N°8 27 / 05/2023
//8) Leer tres caracteres y mostrarlos ordenados. Desarrollar un método que reciba los
//tres caracteres y los devuelva ordenados. El menor en el primer argumento y el
//mayor en el último.

//using System;
//using System.Collections.Generic;
//using System.Linq;
//using System.Text;
//using System.Threading.Tasks;

//namespace GuiaNumero5
//{
//    class Program
//    {
//        static void Main(string[] args)
//        {

//            char letra1, letra2, letra3;
//            Console.WriteLine("Ingrese la primer letra");
//            letra1 = Console.ReadKey().KeyChar;
//            Console.WriteLine();
//            Console.WriteLine("Ingrese la segunda letra ");
//            letra2 = Console.ReadKey().KeyChar;
//            Console.WriteLine();
//            Console.WriteLine("Ingrese la tercer letra");
//            letra3 = Console.ReadKey().KeyChar;
//            Console.WriteLine();
//            Console.WriteLine($"El resultado final es: {OrdenarLetras(letra1, letra2, letra3)}");

//        }
//        static string OrdenarLetras(char primera, char segunda, char tercera)
//        {
//            //var lista = new List<char> { primera, segunda, tercera };
//            //char menor = 'a';
//            //char medio ='a';
//            //char mayor = 'a' ;
//            //foreach (char elemento in lista)
//            //{
//            //    if (elemento == primera)
//            //    {
//            //        menor = primera;
//            //        medio = primera;
//            //        mayor = primera;
//            //    }
//            //    else if (elemento == segunda)
//            //    {
//            //        if (segunda > primera)
//            //        {
//            //            medio = segunda;
//            //            medio = tercera;
//            //        }
//            //        else
//            //        {
//            //            menor = segunda;
//            //            medio = primera;
//            //            mayor = primera;
//            //        }
//            //    }
//            //    else
//            //    {
//            //        if (elemento == tercera)
//            //        {
//            //            if (tercera < primera && tercera < segunda) menor = tercera;
//            //            else if (tercera < primera && tercera > segunda) medio = tercera;
//            //            else if (tercera > primera && tercera < segunda) medio = tercera;
//            //            else if (tercera > primera && tercera > segunda) mayor = tercera;
//            //        }

//            //    }
//            //}
//            //var resultado = new List<char> { menor, medio, mayor };
//            //Console.WriteLine(resultado);
//            //return resultado;
//            var lista = new List<char> { primera, segunda, tercera };
//            lista.Sort(); // Ordenar la lista de caracteres en orden ascendente
//            string prueba = string.Join(" ", lista); // Lo transformo en un string porque no me està leyendo el listado "lista"
//            return prueba;

//        }

//    }

//}


#endregion
#region Ejercicio N°9 27 / 05/2023
//9) Hacer un programa que mediante un menú de opciones permite resolver los
//siguientes puntos:
//OPCIÓN 1: Calcular y escribir cada uno de los términos de la serie (i -1) / i! para i
//(entero) desde 1 y hasta que el término calculado sea mayor que un dato k. Utilizar
//un procedimiento para el cálculo y escritura de los términos y una función para el
//factorial.
//OPCIÓN 2: Calcular y escribir las raíces de una ecuación de segundo grado
//(ax2+bx+c). Los coeficientes a, b y c son datos de entrada.
//OPCIÓN 3: Dado un círculo de centro X, punto del plano de coordenadas (x1, x2) y
//de radio R. Determinar si el punto P de coordenadas (p1, p2) está adentro o afuera
//del círculo.
//Ayuda: calcular la distancia de P a X y compara el resultado con R.
//El menú debe reiterarse hasta que el usuario decida finalizar.

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp1
{
    class Program
    {
        static void Main(string[] args)
        {
            int tipo;
            int k;

            do {
                Console.WriteLine("Ingrese el nùmero de la operación a realizar (opción = 1, opción = 2, opción =3, salir=4)");
                tipo = int.Parse(Console.ReadLine());
                switch (tipo)
                    {
                        case 1:
                            {
                                Console.WriteLine("Ingrese dale el dato k:");
                                k = int.Parse(Console.ReadLine());
                                Console.WriteLine(HacerPrimerCalculo(k));
                                Console.ReadKey();
                                break;
                            }
                        case 2:
                            {

                                break;
                            }
                        case 3:
                            {

                                break;
                            }
                        default:
                            {
                                if (tipo == 4) Console.WriteLine("Usted decidió salir");
                                else { 
                                        Console.WriteLine("Seleccionó una opción incorrecta. \nElija nuevamente ");
                                     }
                                Console.ReadKey();
                                Console.Clear();
                                break;
                            }
                    }
                } while (tipo != 4) ;

            
        }


            static int HacerPrimerCalculo(int num)
            {
                int termino = (num - 1) / 1;
                for (int i = 1; termino < num; i++)
                {
                    termino = (num - 1) / Factorial(num);
                    Console.WriteLine(termino);
                }
                return termino;
            }
            static int Factorial(int num)
            {
                int factorial = 1;
                for (int i = 1; i <= num; i++)
                {
                    factorial *= i;
                    return factorial;
                }
                return factorial;
            }
    }
}   

#endregion
//10) Determinar cuántas veces aparece la subcadena X en un texto.
//11) De un conjunto de palabras que ingresan por teclado (“***” fin de datos), seleccionar
//Introducción a la programación
//la que contenga mayor cantidad de vocales y mostrarla cambiando mayúsculas por
//minúsculas y viceversa. Desarrollar y utilizar métodos para:
//a) Calcular la cantidad de vocales (minúsculas o mayúsculas) de una cadena.
//b) Modificar un texto que contiene letras cambiando mayúsculas por minúsculas
//y viceversa.
//12) Leer N cadenas, informar: cuántas fueron capaces y la concatenación de los digitos
//contenidos en ellas. Desarrollar y utilizar funciones que permitan:
//a) Determinar si una cadena es capicua.
//b) Recorrer un texto formando un número con los caracteres que son dígitos.
//Ejemplo: “E * 3v - 98fT ? 5” → 3985(0 si no tiene dígitos).
//13) Escribir un método que a partir de un carácter devuelve un código numérico, según:
//1 si es una letra
//2 si es un dígito
//3 si es paréntesis o corchete
//4 si es blanco
//0 si no es ninguno de los anteriores
//Utilizando el método anterior, desarrollar un procedimiento que transforma una cadena de
//caracteres (parámetro) en la cadena formada por los códigos correspondientes. Cómo la
//función devuelve valores enteros, estos deben ser convertidos a caracteres para ser
//reemplazado en la cadena.
//Ejemplo “9 (k]-A” → “2431301”
#endregion
#region Ejercicio Nº4 29/04/2023
//try //El try catch va a evitar que se rompa el programa cuando ingresen simbolos o letras en lugar de números
//{
//    int primerNumero, segundoNumero;
//    Console.WriteLine("Vamos comparar dos números enteros que usted va a ingresar");
//    Console.WriteLine("Ingrese el primer número (NUM1) entero");
//    primerNumero = int.Parse(Console.ReadLine()); //Con el método Parse el string no puede ser nulo (null), dado a que devuelve un error
//    Console.WriteLine("Ingrese el segundo número (NUM2) entero");
//    segundoNumero = Convert.ToInt32(Console.ReadLine());//Con el método Convert el string si puede ser nulo (null), dado a que cero "0"
//    if (primerNumero == segundoNumero)
//    {
//        Console.WriteLine($"NUM1({primerNumero} es igual a NUM2({segundoNumero})");
//    }
//    else if (primerNumero > segundoNumero) Console.WriteLine($"NUM1({primerNumero}) es mayor a NUM2({segundoNumero})");
//    else
//    {
//        Console.WriteLine($"NUM1({primerNumero}) es menor a NUM2({segundoNumero})");
//    }
//    Console.ReadKey(); //evita que una vez que se muestren los resultados se cierre la consola
//}
//catch (FormatException) //el catch atrapa solo errores de formato
//{
//    Console.WriteLine("El dato ingresado tuvo un formato incorrecto, debe ingresar números enteros");

//}

#endregion
#region Ejercicio Nº5 29/04/2023
//using System;
//using System.Linq.Expressions;

//try //El try catch va a evitar que se rompa el programa cuando ingresen simbolos o letras en lugar de números
//{
//    int primerNumero, segundoNumero,resultado=0;
//    char inicial;
//    Console.WriteLine("Vamos operar con dos números enteros que usted va a ingresar");
//    Console.WriteLine("Ingrese el primer número (NUM1) entero");
//    primerNumero = int.Parse(Console.ReadLine()); //Con el método Parse el string no puede ser nulo (null), dado a que devuelve un error
//    Console.WriteLine("Ingrese el segundo número (NUM2) entero");
//    segundoNumero = Convert.ToInt32(Console.ReadLine());//Con el método Convert el string si puede ser nulo (null), dado a que cero "0"
//    Console.WriteLine("Ingrese la inicial de la operación que desea realizar. Suma (s), Resta(r), División(d) o Multiplicación(m)");
//    inicial = Convert.ToChar((Console.ReadLine()));
//   switch(inicial)
//    {
//        case 's':
//            resultado = primerNumero + segundoNumero;
//            Console.WriteLine($"La suma de {primerNumero} + {segundoNumero} es: {resultado}");
//            break;
//        case 'r':
//            resultado = primerNumero - segundoNumero;
//            Console.WriteLine($"La resta de {primerNumero} - {segundoNumero} es: {resultado}");
//            break;
//        case 'd':
//            if (segundoNumero == 0) Console.WriteLine("No puede dividir un número por cero (este fue su segundo número ingresado)");
//            else 
//            {resultado = primerNumero / segundoNumero;
//            Console.WriteLine($"La divición de {primerNumero} / {segundoNumero} es: {resultado}");
//            }
//            break;
//        case 'm':
//            resultado = primerNumero * segundoNumero;
//            Console.WriteLine($"La multiplicación de {primerNumero} * {segundoNumero} es: {resultado}");
//            break;
//        default:
//            Console.WriteLine("Usted ingresó un caractér incorrecto");
//            break;
//    }
//}
//catch (FormatException) //el catch atrapa solo errores de formato
//{
//    Console.WriteLine("El dato ingresado tuvo un formato incorrecto, debe ingresar números enteros");

//}

#endregion
#region Ejercicio Nº6 29/04/2023
//using System;
//using System.Linq.Expressions;

//try //El try catch va a evitar que se rompa el programa cuando ingresen simbolos o letras en lugar de números
//{
//    double sueldo, asignacion=0;
//    int cantidadHijos = 0;
//    Console.WriteLine("Ingrese su sueldo neto");
//    sueldo = double.Parse(Console.ReadLine());
//    Console.WriteLine("Ingrese cuantos hijos tiene");
//    cantidadHijos = Convert.ToInt16(Console.ReadLine());
//    if (sueldo <= 25000 && cantidadHijos < 4)
//    {
//        asignacion = sueldo * 0.175 * cantidadHijos;
//        Console.WriteLine($"Usted recibirá una asignación de {asignacion}");
//    }
//    else if (sueldo <= 25000 && cantidadHijos > 3 && cantidadHijos <= 7)
//    {
//        asignacion = sueldo * 0.15 * cantidadHijos;
//        Console.WriteLine($"Usted recibirá una asignación de {asignacion}");
//    }
//    if (sueldo > 25000 && sueldo <=50000 && cantidadHijos > 4 && cantidadHijos <= 7)
//    {
//        asignacion = sueldo * 0.095 * cantidadHijos;
//        Console.WriteLine($"Usted recibirá una asignación de {asignacion}");
//    }
//    if (sueldo > 50000 && cantidadHijos > 5 && cantidadHijos <= 7)
//    {
//        asignacion = sueldo * 0.086 * cantidadHijos;
//        Console.WriteLine($"Usted recibirá una asignación de {asignacion}");
//    }
//    else Console.WriteLine("Usted no recibirá ninguna asignación");

//}
//catch (FormatException) //el catch atrapa solo errores de formato
//{
//    Console.WriteLine("Los datos ingresados tuvieron un formato incorrecto");

//}

#endregion
#region Ejercicio Nº7 02/05/2023
//try //El try catch va a evitar que se rompa el programa cuando ingresen simbolos o letras en lugar de números
//{
//    double primerLado, segundoLado, tercerLado;
//    Console.WriteLine("¡Bienvenido! vamos a analizar que tipo de triangulo tiene en base a sus lados");
//    Console.WriteLine("Ingrese el primer lado:");
//    primerLado = double.Parse(Console.ReadLine()); //Con el método Parse el string no puede ser nulo (null), dado a que devuelve un error
//    Console.WriteLine("Ingrese el segundo lado:");
//    segundoLado = Convert.ToDouble(Console.ReadLine());//Con el método Convert el string si puede ser nulo (null), dado a que cero "0"
//    Console.WriteLine("Ingrese el tercer lado:");
//    tercerLado = double.Parse(Console.ReadLine()); // Para este caso es mejor usar el Parce dado a que 0 no es una posibilidad para un lado
//    if (primerLado == segundoLado && primerLado == tercerLado) Console.WriteLine("Su triangulo es equilátero");
//    else if ((primerLado == segundoLado && primerLado != tercerLado) || (primerLado == tercerLado && primerLado != segundoLado) || (segundoLado == tercerLado && primerLado != segundoLado))
//    {
//        Console.WriteLine("Su triangulo es isósceles");
//    }
//    else
//    {
//        Console.WriteLine("Su triangulo es escaleno");
//    }
//    Console.ReadKey(); //evita que una vez que se muestren los resultados se cierre la consola
//}
//catch (FormatException) //el catch atrapa solo errores de formato
//{
//    Console.WriteLine("El dato ingresado tuvo un formato incorrecto, debe asignar coeficientes");

//}

#endregion
#region Ejercicio Nº8 02/05/2023
//try //El try catch va a evitar que se rompa el programa cuando ingresen simbolos o letras en lugar de números
//{
//    double A, B, C, aux, ZZ;
//    Console.WriteLine("Ingrese el valor de A");
//    A = Convert.ToDouble(Console.ReadLine());
//    Console.WriteLine("Ingrese el valor de B");
//    B = Convert.ToDouble(Console.ReadLine());
//    Console.WriteLine("Ingrese el valor de C");
//    C = Convert.ToDouble(Console.ReadLine());
//    aux = 2*Math.Abs(A)-3;
//    if (aux<A%2+5)
//    {
//        ZZ = A;
//        A = B;
//        B = ZZ;
//        aux = Math.Truncate(ZZ / B);
//    }
//    else
//    {
//        ZZ = C;
//        C = A;
//        A = ZZ;
//        if (ZZ<=B)
//        { aux = B;
//            B = C;
//            C= aux;
//        }
//        Console.WriteLine($"El valor de ZZ es:{ZZ}"); //5
//        Console.WriteLine($"El valor de aux es:{aux}"); //11
//        Console.WriteLine($"El valor de A es:{A}, el de B es:{B} y el de C es:{C}"); //5,3,-7
//    }
//    Console.ReadKey(); //evita que una vez que se muestren los resultados se cierre la consola
//}
//catch (FormatException) //el catch atrapa solo errores de formato
//{
//    Console.WriteLine("El dato ingresado tuvo un formato incorrecto, debe asignar coeficientes");

//}

#endregion
#region Ejercicio Nº9 A 02/05/2023
//try //El try catch va a evitar que se rompa el programa cuando ingresen simbolos o letras en lugar de números
//{
//    double valorX = int.Parse(Console.ReadLine()); //Con el método Parse el string no puede ser nulo (null), dado a que devuelve un error
//    double valorY = 0;
//    Console.WriteLine("Ingrese el valor de X:");
//    if (valorX == 0) Console.WriteLine("El valor de Y=0");
//    else if (valorX <=0 )
//     {
//        valorY= 1+ Math.Pow((1+valorX), 2);
//        Console.WriteLine($"El valor de Y = {valorY}");
//    }
//      else
//    {
//        valorY = 1 - Math.Pow((1 + valorX), 2);
//        Console.WriteLine($"El valor de Y = {valorY}");
//    }
//    Console.ReadKey(); //evita que una vez que se muestren los resultados se cierre la consola
//}
//catch (FormatException) //el catch atrapa solo errores de formato
//{
//    Console.WriteLine("El dato ingresado tuvo un formato incorrecto, debe asignar coeficientes");

//}

#endregion
#region Ejercicio Nº9 B 02/05/2023
//try //El try catch va a evitar que se rompa el programa cuando ingresen simbolos o letras en lugar de números
//{
//    double primerNumero, segundoNumero;
//    Console.WriteLine("Ingrese el primer número");
//    primerNumero = double.Parse(Console.ReadLine()); //Con el método Parse el string no puede ser nulo (null), dado a que devuelve un error
//    Console.WriteLine("Ingrese el segundo número");
//    segundoNumero = double.Parse(Console.ReadLine()); //Uso Parse porque no quiero que tome el null como 0
//        if (primerNumero < 0 && segundoNumero < 0) Console.WriteLine("Ambos números son negativos");
//        else if (primerNumero > 0 && segundoNumero > 0) Console.WriteLine("Ambos números son positivos");
//        else if (primerNumero == 0 || segundoNumero == 0) Console.WriteLine("Ambos números son igual a cero");
//        else if ((primerNumero < 0 && segundoNumero == 0)||(segundoNumero < 0 && primerNumero == 0)) Console.WriteLine("Un número es negativo y el otro es cero");
//        else if ((primerNumero > 0 && segundoNumero == 0) || (segundoNumero > 0 && primerNumero == 0)) Console.WriteLine("Un número es positivo y el otro es cero");
//        else if (primerNumero < 0 || segundoNumero < 0) Console.WriteLine("Alguno de los números es negativo");

//    Console.ReadKey(); //evita que una vez que se muestren los resultados se cierre la consola
//}
//catch (FormatException) //el catch atrapa solo errores de formato
//{
//    Console.WriteLine("El dato ingresado tuvo un formato incorrecto, debe asignar coeficientes");

//}

#endregion
#region Ejercicio Nº9 C 02/05/2023
//using System.Runtime.Intrinsics.X86;

//try //El try catch va a evitar que se rompa el programa cuando ingresen simbolos o letras en lugar de números
//{
//    int numeroLibreta;
//    double nota1, nota2, nota3, promedio=0;
//    Console.WriteLine("¡Hola alumno! Ingrese su número de libreta");
//    numeroLibreta = int.Parse(Console.ReadLine());
//    Console.WriteLine("Alumno, ingrese su primer calificación");
//    nota1 = int.Parse(Console.ReadLine());
//    Console.WriteLine("Alumno, ingrese su segunda calificación");
//    nota2 = int.Parse(Console.ReadLine());
//    Console.WriteLine("Alumno, ingrese su tercer calificación");
//    nota3 = int.Parse(Console.ReadLine());
//    promedio= (nota1+nota2+nota3)/3;
//    Console.WriteLine($"Su número de libreta es: {numeroLibreta}");
//    if (promedio >= 9) { 
//        Console.WriteLine("Usted aprobó");
//        Console.WriteLine("Su concepto es: Sobresaliente");
//    }
//    else if (promedio >= 8   && promedio < 9)
//    {
//        Console.WriteLine("Usted aprobó");
//        Console.WriteLine("Su concepto es: Distinguido");
//    }
//    else if (promedio >= 6 && promedio < 8)
//    {
//        Console.WriteLine("Usted aprobó");
//        Console.WriteLine("Su concepto es: Bueno");
//    }
//    else if (promedio >= 4 && promedio < 6)
//    {
//        Console.WriteLine("Usted aprobó");
//        Console.WriteLine("Su concepto es: Regular");
//    }
//    if (promedio < 4)
//    {
//        Console.WriteLine("Usted no aprobó");
//        Console.WriteLine("Su concepto es: Insuficiente");
//    }

//    Console.ReadKey(); //evita que una vez que se muestren los resultados se cierre la consola
//}
//catch (FormatException) //el catch atrapa solo errores de formato
//{
//    Console.WriteLine("El dato ingresado tuvo un formato incorrecto, debe asignar coeficientes");

//}

#endregion
#region Ejercicio Nº9 D 02/05/2023
//using System;

//class GuiaNumero2
//{
//    static void Main(string[] args)
//    {
//        try  
//{
//    char primera, segunda, tercera;
//    Console.WriteLine("Ingrese las tres letras:");
//    primera = Console.ReadKey().KeyChar;
//    segunda = Console.ReadKey().KeyChar;
//    tercera = Console.ReadKey().KeyChar;
//    Console.WriteLine();
//    if (primera >= segunda && primera >= tercera && segunda >= tercera) Console.WriteLine($"El orden actual de las letras es {tercera} - {segunda} - {primera}");
//    else if (primera >= segunda && primera >= tercera && tercera >= segunda) Console.WriteLine($"El orden actual de las letras es {segunda} - {tercera} - {primera}");
//    else if (segunda >= tercera && segunda >= tercera && primera >= tercera) Console.WriteLine($"El orden actual de las letras es {tercera} - {primera} - {segunda}");
//    else if (segunda >= tercera && segunda >= primera && tercera >= primera) Console.WriteLine($"El orden actual de las letras es {primera} - {tercera} - {segunda}");
//    else if (tercera >= primera && tercera >= segunda && primera >= segunda) Console.WriteLine($"El orden actual de las letras es {primera} - {tercera} - {tercera}");
//    else
//    Console.WriteLine($"El orden de las letras es {primera} - {tercera} - {segunda}");
//    Console.ReadKey(); //evita que una vez que se muestren los resultados se cierre la consola   
//}
//catch (FormatException)
//{
//    Console.WriteLine("Debe ingresar exactamente tres letras");
//}
//    }
//}
//using System;

//class GuiaNumero2
//{
//    static void Main(string[] args)
//    {
//        try
//        {
//            char primera, segunda, tercera, menor, medio, mayor;
//            Console.WriteLine("Ingrese las tres letras:");
//            primera = Console.ReadKey().KeyChar;
//            segunda = Console.ReadKey().KeyChar;
//            tercera = Console.ReadKey().KeyChar;
//            Console.WriteLine();
//            if (primera<=segunda && primera<=tercera)
//            { menor = primera;
//                if (segunda<=tercera)
//                { medio = segunda;
//                    mayor = tercera;
//                }
//                else if (segunda <= primera && segunda <= tercera)
//                {
//                    menor = segunda;
//                    if (primera <= tercera)
//                    {
//                        medio = primera;
//                        mayor = tercera;
//                    }
//                    else
//                    {
//                        menor = tercera;
//                        if (primera <= segunda)
//                        {
//                            medio = primera;
//                            mayor = segunda;
//                        }
//                        else { medio = segunda;
//                            mayor = primera;
//                        }
//                    }

//                 Console.WriteLine($"El orden es {menor}, {medio}, {mayor}");
//                }
//            } 


//            Console.ReadKey(); //evita que una vez que se muestren los resultados se cierre la consola   
//        }
//        catch (FormatException)
//        {
//            Console.WriteLine("Debe ingresar exactamente tres letras");
//        }
//    }
//}
#endregion
#region Ejercicio Nº9 E 06/05/2023
//using System;
//class GuiaNumero2
//{
//    static void Main(string[] args)
//    {
//        try
//        {
//            int dia, mes;
//            Console.WriteLine("Ingrese el número del día");
//            dia = int.Parse(Console.ReadLine());
//            Console.WriteLine("Ingrese el número del mes");
//            mes = int.Parse(Console.ReadLine());
//            if ((dia >= 21 && mes == 12) || mes == 1 || mes == 2 || (dia >= 20 && mes == 3)) Console.WriteLine("La estación es Verano");
//            if ((dia >= 21 && mes == 3) || mes == 4 || mes == 5 || (dia >= 20 && mes == 6)) Console.WriteLine("La estación es Otoño");
//            if ((dia >= 21 && mes == 6) || mes == 7 || mes == 8 || (dia >= 20 && mes == 9)) Console.WriteLine("La estación es Invierno");
//            if ((dia >= 21 && mes == 9) || mes == 10 || mes == 11 || (dia >= 20 && mes == 12)) Console.WriteLine("La estación es Primavera");
//            Console.WriteLine("Gracias por probar nuestro programa");

//            Console.ReadKey(); //evita que una vez que se muestren los resultados se cierre la consola   
//        }
//        catch (FormatException)
//        {
//            Console.WriteLine("Debe ingresar exactamente tres letras");
//        }
//    }
//}
#endregion
#region Ejercicio Nº10 06/05/2023
//using System;
//class GuiaNumero2
//{
//    static void Main(string[] args)
//    {
//        try
//        {
//            int dia;
//            Console.WriteLine("Ingrese un número entre 1 y 7, y se le devolverá a que día de la semana es hoy");
//            dia = int.Parse(Console.ReadLine());

//            if (dia == 1) Console.WriteLine("hoy es lunes");
//            if (dia == 2) Console.WriteLine("hoy es martes");
//            if (dia == 3) Console.WriteLine("hoy es miercoles");
//            if (dia == 4) Console.WriteLine("hoy es jueves");
//            if (dia == 5) Console.WriteLine("hoy es viernes");
//            if (dia == 6) Console.WriteLine("hoy es sabado");
//            if (dia == 7) Console.WriteLine("hoy es domingo");
//            if (dia > 7) Console.WriteLine("El numero ingresado es incorrecto");
//            Console.WriteLine("Gracias por probar nuestro programa");

//            Console.ReadKey(); //evita que una vez que se muestren los resultados se cierre la consola   
//        }
//        catch (FormatException)
//        {
//            Console.WriteLine("Debe ingresar exactamente tres letras");
//        }
//    }
//}
#endregion
#region Ejercicio Nº11 06/05/2023
//using System;
//class Program
//{
//    static void Main(string[] args)
//    {
//        try
//        {
//            char letra;
//            Console.WriteLine("Ingrese primer letra de su estado civil");
//            letra = Console.ReadKey().KeyChar;
//            letra = Char.ToUpper(letra);
//            Console.WriteLine();
//            switch (letra)
//            {
//                case 'C':
//                    Console.WriteLine("CASADO");
//                    break;

//                case 'S':
//                    Console.WriteLine("SOLTERO");
//                    break;

//                case 'V':
//                    Console.WriteLine("VIUDO");
//                    break;

//                case 'D':
//                    Console.WriteLine("DIVORCIADO");
//                    break;

//                default:
//                    Console.WriteLine("NO EXISTE");
//                    break;
//            }
//            Console.ReadKey(); //evita que una vez que se muestren los resultados se cierre la consola
//        }



//        catch (FormatException)
//        {
//            Console.WriteLine("El dato ingresado no es valido");
//        }
//    }
//}
#endregion
#region Ejercicio Nº12 06/05/2023
//using System;
//class Program
//{
//    static void Main(string[] args)
//    {
//        try
//        {
//            char ingreso;
//            Console.WriteLine("Ingrese un carácter cualquiera");
//            ingreso = Console.ReadKey().KeyChar;
//            Console.WriteLine();
//            if (Char.IsDigit(ingreso)) Console.WriteLine("El carácter es un número");
//            else if (Char.IsLetter(ingreso))
//            {
//                if (EsVocal(ingreso)) Console.WriteLine("El carácter es una vocal");
//                else Console.WriteLine("El carácter es una consonante");
//            }
//            else Console.WriteLine("El carácter es del tipo especial");
//            Console.ReadKey(); //evita que una vez que se muestren los resultados se cierre la consola
//        }



//        catch (FormatException)
//        {
//            Console.WriteLine("El dato ingresado no es valido");
//        }
//    }

//    static bool EsVocal(char ingreso)
//    {
//        ingreso = Char.ToLower(ingreso);
//        return ingreso == 'a' || ingreso == 'e' || ingreso == 'i' || ingreso == 'o' || ingreso == 'u';
//    }
//}
#endregion
